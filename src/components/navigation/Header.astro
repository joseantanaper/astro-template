---
const { cookie } = Astro.props
---

<nav class="navbar app-main-navbar fixed-top bg-body-tertiary fixed-top">
  <!-- Navbar Start -->
  <div class="container-fluid flex-nowrap">
    <div class="navbar-brand">
      <!-- Left Navbar Button -->
      <button
        class="navbar-toggler"
        type="button"
        data-bs-toggle="offcanvas"
        data-bs-target="#offcanvasNavbarLeft"
        aria-controls="offcanvasNavbarLeft"
        aria-label="Toggle navigation"
      >
        <i class="bi bi-layout-sidebar-inset"></i>
      </button>
    </div>

    <!-- Title -->
    <a
      class="navbar-brand fw-bolder"
      style="text-align: left !important; float: left; overflow: hidden; text-overflow: ellipsis; width: 100vw;"
      href="#">Sticky top Long Text For Testing</a
    >

    <div class="vr ms-3 me-3"></div>

    <!-- Right Navbar Button -->
    <button type="button" class="btn text-nowrap d-inline-flex text-uppercase">
      <i class="bi bi-translate"></i>
      <span class="d-none d-lg-block text-nowrap ms-1">{cookie.language}</span>
    </button>
    <button
      name="app-theme-toggler"
      type="button"
      class="btn text-nowrap d-inline-flex text-capitalize"
    >
      <i class="bi bi-sun"></i>
      <span class="d-none d-lg-block text-nowrap ms-1">{cookie.theme}</span>
    </button>

    <button
      class="navbar-toggler ms-3"
      type="button"
      data-bs-toggle="offcanvas"
      data-bs-target="#offcanvasNavbar"
      aria-controls="offcanvasNavbar"
      aria-label="Toggle navigation"
    >
      <i class="bi bi-layout-sidebar-inset-reverse"></i>
    </button>

    <!-- Menu Left -->
    <div
      class="offcanvas offcanvas-start"
      tabindex="-1"
      id="offcanvasNavbarLeft"
      aria-labelledby="offcanvasNavbarLeftLabel"
    >
      <div class="offcanvas-header bg-body-tertiary border-bottom shadow-sm">
        <button
          class="btn btn-danger"
          type="button"
          data-bs-dismiss="offcanvas"
        >
          <i class="bi bi-chevron-bar-left"></i>
        </button>
        <h5 class="offcanvas-title" id="offcanvasNavbarLeftLabel">
          Left Offcanvas
        </h5>
      </div>
      <div class="offcanvas-body">
        <ul class="navbar-nav justify-content-start flex-grow-1 pe-3">
          <li class="nav-item">
            <a class="nav-link active" aria-current="page" href="#">Home</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="#">Link</a>
          </li>
          <li class="nav-item dropdown">
            <a
              class="nav-link dropdown-toggle"
              href="#"
              role="button"
              data-bs-toggle="dropdown"
              aria-expanded="false"
            >
              Dropdown
            </a>
            <ul class="dropdown-menu">
              <li><a class="dropdown-item" href="#">Action</a></li>
              <li><a class="dropdown-item" href="#">Another action</a></li>
              <li>
                <hr class="dropdown-divider" />
              </li>
              <li>
                <a class="dropdown-item" href="#">Something else here</a>
              </li>
            </ul>
          </li>
        </ul>
        <form class="d-flex mt-3" role="search">
          <input
            class="form-control me-2"
            type="search"
            placeholder="Search"
            aria-label="Search"
          />
          <button class="btn btn-outline-success" type="submit">Search</button>
        </form>
      </div>
    </div>

    <!-- Menu Right -->
    <div
      class="offcanvas offcanvas-end"
      tabindex="-1"
      id="offcanvasNavbar"
      aria-labelledby="offcanvasNavbarLabel"
    >
      <div class="offcanvas-header bg-body-tertiary border-bottom shadow-sm">
        <h5 class="offcanvas-title" id="offcanvasNavbarLabel">
          Right Offcanvas
        </h5>
        <button
          class="btn btn-danger"
          type="button"
          data-bs-dismiss="offcanvas"
        >
          <i class="bi bi-chevron-bar-right"></i>
        </button>
      </div>
      <div class="offcanvas-body">
        <ul class="navbar-nav justify-content-end flex-grow-1 pe-3">
          <li class="nav-item">
            <a class="nav-link active" aria-current="page" href="#">Home</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="#">Link</a>
          </li>
          <li class="nav-item dropdown">
            <a
              class="nav-link dropdown-toggle"
              href="#"
              role="button"
              data-bs-toggle="dropdown"
              aria-expanded="false"
            >
              Dropdown
            </a>
            <ul class="dropdown-menu">
              <li><a class="dropdown-item" href="#">Action</a></li>
              <li><a class="dropdown-item" href="#">Another action</a></li>
              <li>
                <hr class="dropdown-divider" />
              </li>
              <li>
                <a class="dropdown-item" href="#">Something else here</a>
              </li>
            </ul>
          </li>
        </ul>
        <form class="d-flex mt-3" role="search">
          <input
            class="form-control me-2"
            type="search"
            placeholder="Search"
            aria-label="Search"
          />
          <button class="btn btn-outline-success" type="submit">Search</button>
        </form>
      </div>
    </div>
  </div>
  <!-- Navbar End -->
</nav>

<script>
  import { $theme, storeTheme, retrieveTheme } from '../../store/store'
  import { getCookie } from '../../utils/cookie'

  const setTheme = (
    elem: HTMLButtonElement | null,
    theme: 'light' | 'dark' = 'light'
  ) => {
    elem =
      elem ?? document.querySelectorAll("button[name='app-theme-toggler']")[0]
    document.documentElement?.setAttribute('data-bs-theme', theme)
    elem!
      .getElementsByTagName('i')[0]
      .setAttribute(
        'class',
        theme === null || theme === 'dark' ? 'bi bi-sun' : 'bi bi-moon'
      )
    elem!.getElementsByTagName('span')[0].innerText = theme
    storeTheme(theme)
  }

  const defaultTheme = () => {
    // No es la manera, porque tarda. Hay que utilizar los nanostores
    const defaultTheme = getCookie('theme')
    setTheme(
      null,
      defaultTheme === 'light' || defaultTheme === 'dark'
        ? defaultTheme
        : 'light'
    )
  }

  const componentInit = () => {
    document
      .querySelectorAll("button[name='app-theme-toggler']")
      .forEach((elem: Element) => {
        elem.addEventListener('click', (e: Event) => {
          const currentTheme =
            document.documentElement?.getAttribute('data-bs-theme')
          if (currentTheme === null || currentTheme === 'light') {
            setTheme(elem as HTMLButtonElement, 'dark')
          } else {
            setTheme(elem as HTMLButtonElement, 'light')
          }
        })
      })
  }

  window.document.addEventListener('astro:page-load', componentInit)
</script>
